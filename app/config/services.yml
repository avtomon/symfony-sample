# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
#parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # Fixing CREATE SCHEMA public in migrations
    doctrineMigrationDiffListener:
        class: AppBundle\Doctrine\MigrationEventSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    app.common_parameters:
        class: Symfony\Component\HttpFoundation\ParameterBag

    app.monolog.processor.request:
        class: AppBundle\Monolog\RequestProcessor
        arguments:  [ "@app.common_parameters"]
        tags:
        - { name: monolog.processor, method: processRecord }

    #
    # Session
    #
    session.storage.mock_array:
        class: Symfony\Component\HttpFoundation\Session\Storage\MockArraySessionStorage

    #
    # Kernel Listeners
    #
    app.listener.kernel_request:
        class: AppBundle\Listeners\KernelRequestListener
        arguments: [ "@app.common_parameters" ]
        tags:
        - { name: kernel.event_listener, event: kernel.request, method: onRequest }

    app.listener.kernel_exception:
        class: AppBundle\Listeners\KernelExceptionListener
        arguments: [ "@logger" ]
        tags:
        - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    app.listener.kernel_response:
        class: AppBundle\Listeners\KernelResponseListener
        arguments: [ "%kernel.debug%", "@app.common_parameters" ]
        tags:
        - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    app.listener.console_command:
        class: AppBundle\Listeners\ConsoleCommandListener
        arguments: [ "@app.common_parameters" ]
        tags:
        - { name: kernel.event_listener, event: console.command, method: onCommand }

    #
    # Assemblers
    #
    app.assembler.balance_response_assembler:
        class: AppBundle\Assembler\BalanceResponseDTOAssembler
        arguments: [ "@app.decimal_money_formatter" ]

    app.assembler_invoices_list.invoice_list_search_assembler:
        class: AppBundle\Assembler\InvoicesList\InvoiceListSearchAssembler
        public: true

    app.assembler.invoices_list.invoices_list_assembler:
        class: AppBundle\Assembler\InvoicesList\InvoicesListAssembler
        arguments:
            - "@app.decimal_money_formatter"
        public: true

    app.assembler.setting_response_assembler:
        class: AppBundle\Assembler\SettingResponseDTOAssembler
        arguments:
            - "@app.configuration_manager"
        public: true

    app.assembler.balance_list_response_assembler:
        class: AppBundle\Assembler\BalancesListResponse\BalanceListItemDTOAssembler
        arguments: [ "@app.decimal_money_formatter" ]

    app.assembler.balance_list_request_assembler:
        class: AppBundle\Assembler\BalancesListRequest\BalanceRequestAssembler
        arguments: [ "@app.assembler.balance_where_assembler" ]
        public: true

    app.assembler.balance_where_assembler:
        class: AppBundle\Assembler\BalancesListRequest\BalanceWhereAssembler
        arguments: [ "@app.decimal_money_parser" ]
        public: true

    app.assembler.pages_assembler:
        class: AppBundle\Assembler\PagesDTOAssembler
        public: true

    #
    # Managers
    #
    app.doctrine.stored_procedure:
        class: AppBundle\Doctrine\StoredProcedureManager
        arguments:
            - "@stored_procedure.pg_func.connection"
            - "@stored_procedure.schema_manager"
        public: true

    app.balance_manager:
        class: AppBundle\Manager\BalanceManager
        arguments:
        - "@doctrine"
        - "@validator"
        - "@app.assembler.balance_response_assembler"
        - "@app.assembler.balance_list_response_assembler"
        - "@app.doctrine.stored_procedure"
        - "@app.decimal_money_parser"
        public: true


    app.object_data_manager:
        class: AppBundle\Manager\ObjectDataManager
        arguments: ["@doctrine", "@validator", "@app.setting_manager", ]
        public: true

    app.setting_manager:
        class: AppBundle\Manager\SettingManager
        arguments: ["@doctrine", "@validator", "@app.assembler.setting_response_assembler", ]
        public: true

    app.order_manager:
        class: AppBundle\Manager\OrderManager
        arguments:
            - "@doctrine"
            - "@validator"
            - "@app.doctrine.stored_procedure"
            - "@app.decimal_money_parser"
        public: true

    app.configuration_manager:
        class: AppBundle\Manager\ConfigurationManager
        public: true

    app.manager.invoices_manager:
        class: AppBundle\Manager\InvoicesManager
        arguments:
            - '@doctrine'
            - '@validator'
            - '@app.assembler.invoices_list.invoices_list_assembler'
        public: true

    app.currency_rate_manager:
        class: AppBundle\Manager\CurrencyRateManager
        arguments: ["@doctrine", "@validator"]
        public: true

    app.manager.operation_manager:
        class: AppBundle\Manager\OperationManager
        arguments: ["@doctrine", "@validator", "@app.doctrine.stored_procedure", "@app.decimal_money_parser"]
        public: true

    #
    # Currencies
    #
    app.currency_list_factory:
        class: AppBundle\Factory\CurrencyListFactory
        arguments: [ "@doctrine" ]

    app.currency_list:
        class: Money\Currencies\CurrencyList
        factory: [ "@app.currency_list_factory", "create" ]

    app.decimal_money_parser:
        class: Money\Parser\DecimalMoneyParser
        arguments: [ "@app.currency_list" ]
        public: true

    app.decimal_money_formatter:
        class: Money\Formatter\DecimalMoneyFormatter
        arguments: [ "@app.currency_list" ]
        public: true

    #
    # Manager factory
    #
#    app.manager_factory:
#        class: AppBundle\Factory\EntityManagerFactory
#        public: true

    #
    # Validation
    #
    app.currency_code_validator:
        class: AppBundle\Validator\Constraints\CurrencyCodeValidator
        arguments: [ "@doctrine" ]

    app.settings_validator:
        class: AppBundle\Validator\Constraints\SettingTypeValidator
        arguments: [ "@app.configuration_manager" ]
